---
- name: Update apt cache
  apt:
    update_cache: yes
  become: yes

# Install system dependencies required for building Erlang and Elixir
- name: Install build dependencies for Erlang/Elixir
  apt:
    name:
      - autoconf
      - m4
      - libncurses5-dev
      - libssl-dev
      - libwxgtk3.0-gtk3-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libpng-dev
      - libssh-dev
      - unixodbc-dev
      - xsltproc
      - fop
      - libxml2-utils
      - build-essential
      - curl
      - git
    state: present
  become: yes

# Check if asdf is already installed
- name: Check for asdf installation
  stat:
    path: "/home/ubuntu/.asdf"
  register: asdf_dir
  become: no

# Clone the asdf repository if not present
- name: Clone asdf repository
  git:
    repo: 'https://github.com/asdf-vm/asdf.git'
    dest: "/home/ubuntu/.asdf"
    version: "v0.10.2"  # change this to your preferred release version
  become: yes
  become_user: ubuntu
  when: not asdf_dir.stat.exists

# Ensure asdf is sourced in the userâ€™s .bashrc
- name: Add asdf source to .bashrc
  lineinfile:
    path: "/home/ubuntu/.bashrc"
    line: '. $HOME/.asdf/asdf.sh'
    state: present
    insertafter: EOF
  become: yes
  become_user: ubuntu

- name: Add asdf completions source to .bashrc
  lineinfile:
    path: "/home/ubuntu/.bashrc"
    line: '. $HOME/.asdf/completions/asdf.bash'
    state: present
    insertafter: EOF
  become: yes
  become_user: ubuntu

- name: Add asdf plugin for erlang
  shell: '. /home/ubuntu/.asdf/asdf.sh && asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git'
  args:
    creates: "/home/ubuntu/.asdf/plugins/erlang"
    executable: /bin/bash
  become: yes
  become_user: ubuntu

- name: Add asdf plugin for elixir
  shell: '. /home/ubuntu/.asdf/asdf.sh && asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git'
  args:
    creates: "/home/ubuntu/.asdf/plugins/elixir"
    executable: /bin/bash
  become: yes
  become_user: ubuntu

# Define the desired versions (adjust as needed)
- name: Set desired versions
  set_fact:
    erlang_version: "27.3"
    elixir_version: "1.18.3"

# Install Erlang via asdf
- name: Install Erlang via asdf
  command: asdf install erlang {{ erlang_version }}
  become: yes
  become_user: ubuntu
  environment:
    HOME: "/home/ubuntu"
    PATH: "/home/ubuntu/.asdf/bin:/home/ubuntu/.asdf/shims:{{ ansible_env.PATH }}"

- name: Set global Erlang version via asdf
  command: asdf global erlang {{ erlang_version }}
  become: yes
  become_user: ubuntu
  environment:
    HOME: "/home/ubuntu"
    PATH: "/home/ubuntu/.asdf/bin:/home/ubuntu/.asdf/shims:{{ ansible_env.PATH }}"

# Install Elixir via asdf
- name: Install Elixir via asdf
  command: asdf install elixir {{ elixir_version }}
  become: yes
  become_user: ubuntu
  environment:
    HOME: "/home/ubuntu"
    PATH: "/home/ubuntu/.asdf/bin:/home/ubuntu/.asdf/shims:{{ ansible_env.PATH }}"

- name: Set global Elixir version via asdf
  command: asdf global elixir {{ elixir_version }}
  become: yes
  become_user: ubuntu
  environment:
    HOME: "/home/ubuntu"
    PATH: "/home/ubuntu/.asdf/bin:/home/ubuntu/.asdf/shims:{{ ansible_env.PATH }}"

# Install the Hex package manager
- name: Install Hex package manager
  command: mix local.hex --force
  become: yes
  become_user: ubuntu
  environment:
    HOME: "/home/ubuntu"
    PATH: "/home/ubuntu/.asdf/bin:/home/ubuntu/.asdf/shims:{{ ansible_env.PATH }}"

# Install Phoenix archive
- name: Install Phoenix archive
  command: mix archive.install hex phx_new --force
  become: yes
  become_user: ubuntu
  environment:
    HOME: "/home/ubuntu"
    PATH: "/home/ubuntu/.asdf/bin:/home/ubuntu/.asdf/shims:{{ ansible_env.PATH }}"

